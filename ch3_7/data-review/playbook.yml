---
- name: Install and configure Apache web server with basic authentication
  hosts: webserver
  become: true 

  vars:
    firewall_pkg: firewalld
    firewall_svc: firewalld
    web_pkg: httpd
    web_svc: httpd
    ssl_pkg: mod_ssl
    httpdconf_src: files/httpd.conf
    httpdconf_dest: /etc/httpd/conf/httpd.conf
    htaccess_src: files/.htaccess
    secrets_dir: /etc/httpd/secrets
    secrets_src: files/htpasswd
    secrets_dest: "{{ secrets_dir }}/htpasswd"
    web_root: /var/www/html

  tasks:
    - name: Ensure the latest version of required packages is installed
      yum:
        name:
          - "{{ firewall_pkg }}"
          - "{{ web_pkg }}"
          - "{{ ssl_pkg }}"
        state: latest

    - name: Enable and start the firewall service
      systemd:
        name: "{{ firewall_svc }}"
        enabled: true
        state: started

    - name: Copy Apache configuration file to destination
      ansible.builtin.copy:
        src: "{{ httpdconf_src }}"
        dest: "{{ httpdconf_dest }}"
        owner: root
        group: root
        mode: '0644'
      notify:
        - restart apache

    - name: Enable and start Apache service
      systemd:
        name: "{{ web_svc }}"
        enabled: true
        state: started

    - name: Create secrets directory for password files
      ansible.builtin.file:
        path: "{{ secrets_dir }}"
        state: directory
        owner: apache
        group: apache
        mode: '0500'

    - name: Copy htpasswd file for basic authentication
      ansible.builtin.copy:
        src: "{{ secrets_src }}"
        dest: "{{ secrets_dest }}"
        owner: apache
        group: apache
        mode: '0400'

    - name: Enable and start the firewall service (using service module)
      ansible.builtin.service:
        name: "{{ firewall_svc }}"
        enabled: true
        state: started

    - name: Allow HTTPS service in the firewall
      ansible.posix.firewalld:
        service: https
        permanent: true
        state: enabled
        immediate: true

    - name: Create .htaccess file in the document root
      ansible.builtin.copy:
        src: "{{ htaccess_src }}"
        dest: "{{ web_root }}/.htaccess"
        owner: apache
        group: apache
        mode: '0400'

    - name: Create the web content file index.html
      ansible.builtin.copy:
        dest: "{{ web_root }}/index.html"
        owner: apache
        group: apache
        mode: '0644'
        content: |
          {{ ansible_fqdn }} ({{ ansible_default_ipv4.address }}) has been customized by Ansible.

    - name: Ensure the web root has the correct permissions
      file:
        path: "{{ web_root }}"
        state: directory
        mode: '0755'

    - name: Enable and start the web service for all changes to take effect
      ansible.builtin.service:
        name: "{{ web_svc }}"
        enabled: true
        state: started

  handlers:
    - name: restart apache
      systemd:
        name: "{{ web_svc }}"
        state: restarted


# Second play 
- name: Test authentication to the web server
  hosts: workstation
  vars_files:
    - vars/secret.yml

  vars:
    web_user: guest

  tasks:
    - name: Request content from the web server using basic authentication
      ansible.builtin.uri:
        url: "https://serverb.lab.example.com"
        user: "{{ web_user }}"
        password: "{{ web_pass }}"
        method: GET
        validate_certs: false
        status_code: 200
      register: auth_test

    - name: Print the content returned from the web server
      ansible.builtin.debug:
        var: auth_test.content
